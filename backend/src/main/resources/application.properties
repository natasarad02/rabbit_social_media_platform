#Spring DataSource drajver koji će se koristiti za komunikaciju aplikacije sa bazom
spring.datasource.driverClassName=org.postgresql.Driver

#Navodi se baza koja se koristi
spring.sql.init.platform=postgres

#Navodi se URL do baze koja je pokrenuta u lokalu na podrazumevanom portu 5432 i na serveru je kreirana šema baze pod nazivom "jpa"
#https://www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (ako koristimo Hibernate za kreiranje tabela, SQL deo sa linka nije potreban)
spring.datasource.url=jdbc:postgresql://localhost:5432/jpa

#Navode se kredencijali za konekciju na server baze
spring.datasource.username=postgres
spring.datasource.password=super

#Umesto da sami pišemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako želimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji će Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
logging.level.org.hibernate.SQL=OFF

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
# spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect
resilience4j.ratelimiter.instances.login.limitForPeriod=5
# broj pokjusaja
resilience4j.ratelimiter.instances.login.limitRefreshPeriod=60s
# 1 minut
resilience4j.ratelimiter.instances.login.timeoutDuration=0
# timeout - nije naznacen u specifikaciji!

#https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
spring.jpa.open-in-view=false

image.upload.dir=images/

# Bloom Filter Configuration
bloom-filter.user.expected-insertions=1000000
bloom-filter.user.fpp=0.01

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=onlybuns.activation@gmail.com
spring.mail.password=owduvjqldtlmhoof
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

spring.redis.host=localhost
spring.redis.port=6379

management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.metrics.export.prometheus.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoint.prometheus.access=permitAll

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Za klinike i azile itd
rabbit.location.exchange.name=rabbit.location.exchange
# Naziv vaseg Direct Exchange-a
rabbit.location.queue.name=rabbit.location.queue
# Naziv vaseg Reda
rabbit.location.routing.key=location.update.key
  # Vas Routing Key

# Konfiguracija load balancera
server.port=8080
load.balancer.urls=http://localhost:8081,http://localhost:8082

# Dodatne konfiguracije
spring.application.name=load-balancer-service

#Konfiguracija za tip message queue-ova rabbitmq/custom
spring.profiles.active=rabbitmq